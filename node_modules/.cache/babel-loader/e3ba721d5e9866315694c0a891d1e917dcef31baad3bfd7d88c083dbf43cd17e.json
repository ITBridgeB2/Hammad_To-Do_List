{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\Desktop\\\\Projects\\\\To-Do List\\\\src\\\\todopage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getTasks, addTask, deleteTask, toggleTaskComplete, updateTask } from './todoservice';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [editingTask, setEditingTask] = useState(null);\n  const fetchTasks = async () => {\n    const data = await getTasks();\n    setTasks(data);\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const handleAddTask = async () => {\n    if (!title) return;\n    if (editingTask) {\n      await updateTask(editingTask.id, title, description);\n      setEditingTask(null);\n    } else {\n      const newTask = await addTask(title, description);\n      setTasks([...tasks, newTask]);\n    }\n    setTitle('');\n    setDescription('');\n    setShowForm(false);\n    fetchTasks();\n  };\n  const handleDeleteTask = async id => {\n    await deleteTask(id);\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const handleToggleComplete = async id => {\n    const updatedTask = await toggleTaskComplete(id);\n    setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n  };\n  const handleEdit = task => {\n    setEditingTask(task);\n    setTitle(task.title);\n    setDescription(task.description);\n    setShowForm(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-button\",\n      onClick: () => {\n        setShowForm(!showForm);\n        setEditingTask(null);\n        setTitle('');\n        setDescription('');\n      },\n      children: showForm ? 'Cancel' : 'Add Task'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Task Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Task Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: editingTask ? 'Update Task' : 'Add Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        style: {\n          textDecoration: 'none'\n        },\n        children: [task.completed ? '' : 'Not Saved: ', task.title, task.completed && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"saved-label\",\n          children: \" - Saved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), !task.completed && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"complete-btn\",\n        onClick: () => handleToggleComplete(task.id),\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-btn\",\n        onClick: () => handleDeleteTask(task.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), !task.completed && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-btn\",\n        onClick: () => handleEdit(task),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"GnIP9tLvvVPQM0InZ3Z7BTyNM4k=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useEffect","useState","getTasks","addTask","deleteTask","toggleTaskComplete","updateTask","jsxDEV","_jsxDEV","TodoList","_s","tasks","setTasks","showForm","setShowForm","title","setTitle","description","setDescription","editingTask","setEditingTask","fetchTasks","data","handleAddTask","id","newTask","handleDeleteTask","filter","task","handleToggleComplete","updatedTask","map","handleEdit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","value","onChange","e","target","style","textDecoration","completed","_c","$RefreshReg$"],"sources":["C:/Users/moham/Desktop/Projects/To-Do List/src/todopage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  getTasks,\r\n  addTask,\r\n  deleteTask,\r\n  toggleTaskComplete,\r\n  updateTask\r\n} from './todoservice';\r\nimport './App.css';\r\n\r\nfunction TodoList() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [editingTask, setEditingTask] = useState(null);\r\n\r\n  const fetchTasks = async () => {\r\n    const data = await getTasks();\r\n    setTasks(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const handleAddTask = async () => {\r\n    if (!title) return;\r\n    if (editingTask) {\r\n      await updateTask(editingTask.id, title, description);\r\n      setEditingTask(null);\r\n    } else {\r\n      const newTask = await addTask(title, description);\r\n      setTasks([...tasks, newTask]);\r\n    }\r\n    setTitle('');\r\n    setDescription('');\r\n    setShowForm(false);\r\n    fetchTasks();\r\n  };\r\n\r\n  const handleDeleteTask = async (id) => {\r\n    await deleteTask(id);\r\n    setTasks(tasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  const handleToggleComplete = async (id) => {\r\n    const updatedTask = await toggleTaskComplete(id);\r\n    setTasks(tasks.map(task => \r\n      task.id === updatedTask.id ? updatedTask : task\r\n    ));\r\n  };\r\n  \r\n\r\n  const handleEdit = (task) => {\r\n    setEditingTask(task);\r\n    setTitle(task.title);\r\n    setDescription(task.description);\r\n    setShowForm(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>To-Do List</h1>\r\n      <button className=\"add-button\" onClick={() => {\r\n        setShowForm(!showForm);\r\n        setEditingTask(null);\r\n        setTitle('');\r\n        setDescription('');\r\n      }}>\r\n        {showForm ? 'Cancel' : 'Add Task'}\r\n      </button>\r\n\r\n      {showForm && (\r\n        <div className=\"task-form\">\r\n          <input\r\n            placeholder=\"Task Title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n          <input\r\n            placeholder=\"Task Description\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n          <button onClick={handleAddTask}>{editingTask ? 'Update Task' : 'Add Task'}</button>\r\n        </div>\r\n      )}\r\n\r\n      {tasks.map((task) => (\r\n        <div key={task.id} className=\"task-box\">\r\n          <strong\r\n            style={{\r\n              textDecoration: 'none', \r\n            }}\r\n          >\r\n            {/* Corrected to remove any index or \"0\" display */}\r\n            {task.completed ? '' : 'Not Saved: '}\r\n            {task.title}\r\n            {task.completed && <span className=\"saved-label\"> - Saved</span>}\r\n          </strong>\r\n          <p>{task.description}</p>\r\n\r\n          {!task.completed && (\r\n            <button className=\"complete-btn\" onClick={() => handleToggleComplete(task.id)}>\r\n              Complete\r\n            </button>\r\n          )}\r\n\r\n          <button className=\"delete-btn\" onClick={() => handleDeleteTask(task.id)}>\r\n            Delete\r\n          </button>\r\n\r\n          {!task.completed && (\r\n            <button className=\"edit-btn\" onClick={() => handleEdit(task)}>\r\n              Edit\r\n            </button>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}